Description: sai-librarian
Parameters:
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  OpenIdAud:
    Type: String
  CloudFrontHostedZoneId:
    Type: String
    Default: Z2FDTNDATAQYW2
    Description: The default HostedZoneId for CloudFront. This is set by AWS.

Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig:
        Name: sai-library
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
        
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        Aliases:
          - !Ref DomainName
        Origins:
          - DomainName: !GetAtt SiteBucket.DomainName
            Id: S3Origin
            DomainName: !Sub "${SiteBucket}.s3.${AWS::Region}.amazonaws.com"
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
          - Id: OpenLibrary
            DomainName: openlibrary.org
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Comment: "Cloudfront for SAI Library"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: "/index.html"
        CacheBehaviors:
          - AllowedMethods: ["GET", "HEAD", "OPTIONS"]
            PathPattern: "/api/books*"
            DefaultTTL: 0
            ForwardedValues:
              QueryString: true
            TargetOriginId: OpenLibrary
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods: ["GET", "HEAD", "OPTIONS"]
            PathPattern: "*.html"
            DefaultTTL: 0
            ForwardedValues:
              QueryString: true
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods: ["GET", "HEAD", "OPTIONS"]
          DefaultTTL: 300
          ForwardedValues:
            QueryString: true
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontDistribution
    Properties:
        Bucket: !Ref SiteBucket
        PolicyDocument:
            Statement:
              - Sid: CloudFrontRead
                Effect: Allow
                Principal:
                  Service: cloudfront.amazonaws.com
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SiteBucket}
                  - !Sub arn:aws:s3:::${SiteBucket}/*
                Condition:
                  StringEquals:
                    "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties: 
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId

  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt [ CloudFrontDistribution, DomainName ]
            HostedZoneId: !Ref CloudFrontHostedZoneId
        - Name: !Ref DomainName
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt [ CloudFrontDistribution, DomainName ]
            HostedZoneId: !Ref CloudFrontHostedZoneId

  BooksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-books"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: bookId
          AttributeType: S
      KeySchema:
        - AttributeName: bookId
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  LibraryUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-user"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: LoginWithGoogle
            Effect: Allow
            Principal:
              Federated: "accounts.google.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "accounts.google.com:aud": !Ref OpenIdAud
      Policies:
        - PolicyName: "dynamo-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:ConditionCheck
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource: !GetAtt [ BooksTable, Arn ]