Description: sai-librarian analytics spike (Paul)
Parameters:
  SubnetIds:
    Default: subnet-a0fa9bf8,subnet-dd1a49e0,subnet-1fd84335,subnet-7d6d270b
    Type: List<AWS::EC2::Subnet::Id>
Resources:
  DBCluster:
    Properties:
      DatabaseName: sai_library
      EnableHttpEndpoint: true
      Engine: aurora-postgresql
      EngineMode: serverless
      EngineVersion: '10.7'
      MasterUserPassword:
        Fn::Sub: '{{resolve:secretsmanager:${RDSSecret}:SecretString:password}}'
      MasterUsername:
        Fn::Sub: '{{resolve:secretsmanager:${RDSSecret}:SecretString:username}}'
      VpcSecurityGroupIds:
      - Fn::GetAtt:
        - DBSecurityGroup
        - GroupId
    Type: AWS::RDS::DBCluster
  DBSecurityGroup:
    Properties:
      GroupDescription: Security group for the RDS DB
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      - CidrIpv6: ::/0
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
    Type: AWS::EC2::SecurityGroup
  DBSubnetGroup:
    Properties:
      DBSubnetGroupDescription: Subnets for the RDS Instance
      SubnetIds:
        Ref: SubnetIds
    Type: AWS::RDS::DBSubnetGroup
  DatabaseMigration:
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - MigrateDBFunction
        - Arn
      Version: 1
    Type: Custom::MigrateDatabase
    Version: '1.0'
  MigrateDBFunction:
    Properties:
      CodeUri: s3://prowe-deploy-bucket/c2e85416e98bb2f9cb4b2c205af61eb1
      Environment:
        Variables:
          CREDENTIALS_ARN:
            Ref: RDSSecret
          DATABASE_ARN:
            Ref: DBCluster
          DATABASE_NAME: sai_library
      Handler: src/DatabaseMigrator.handle
      Policies:
      - Statement:
        - Action:
          - secretsmanager:*
          Effect: Allow
          Resource:
            Ref: RDSSecret
          Sid: DecryptSecret
        - Action:
          - rds-data:*
          Effect: Allow
          Resource: '*'
          Sid: DatabaseAccess
      Runtime: nodejs12.x
      Timeout: 120
    Type: AWS::Serverless::Function
  RDSSecret:
    Properties:
      Description: This is a Secrets Manager secret for the DB
      GenerateSecretString:
        ExcludeCharacters: '"@/\'
        GenerateStringKey: password
        PasswordLength: 16
        SecretStringTemplate: '{"username": "sai_admin"}'
    Type: AWS::SecretsManager::Secret
  SecretRDSAttachment:
    Properties:
      SecretId:
        Ref: RDSSecret
      TargetId:
        Ref: DBCluster
      TargetType: AWS::RDS::DBCluster
    Type: AWS::SecretsManager::SecretTargetAttachment
Transform: AWS::Serverless-2016-10-31
