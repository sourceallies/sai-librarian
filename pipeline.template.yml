Description: sai-librarian pipeline
Parameters:
  GithubAccessToken:
    Type: String
    NoEcho: true
    Description: OAuth token for GitHub
  GithubUsername:
    Type: String
    Description: Github username containing the project's repository
    Default: sourceallies
  GithubRepository:
    Type: String
    Description: Github repository where the project is located
    Default: sai-librarian
  GithubBranch:
    Type: String
    Description: Github branch to track
    Default: master
Mappings:
  Accounts:
    Shared:
      Name: Shared
      Id: "018303830101"
      PipelineRoleArn: arn:aws:iam::018303830101:role/Pipeline
    Dev:
      Name: Dev
      Id: "729161019481"
      DeployerRoleArn: arn:aws:iam::729161019481:role/Deployer
    Qual:
      Name: Qual
      Id: "035409092456"
      DeployerRoleArn: arn:aws:iam::035409092456:role/Deployer
    Prod:
      Name: Prod
      Id: "487696863217"
      DeployerRoleArn: arn:aws:iam::487696863217:role/Deployer
Resources:
  ArtifactStore:
    Type: AWS::S3::Bucket
  ArtifactStorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactStore}
              - !Sub arn:aws:s3:::${ArtifactStore}/*
            Principal:
              AWS:
                - !FindInMap [Accounts, Shared, PipelineRoleArn]
                - !FindInMap [Accounts, Dev, DeployerRoleArn]
                - !FindInMap [Accounts, Qual, DeployerRoleArn]
                - !FindInMap [Accounts, Prod, DeployerRoleArn]
  ArtifactKey: #Needed to allow Dev/Qual/Prod to decrypt artifacts in the Shared account's ArtifactStore
    Type: AWS::KMS::Key
    Properties:
      Description: Key used for encrypting artifacts
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:*
            Resource: "*"
            Principal:
              AWS:
                - !FindInMap [Accounts, Shared, Id]
                - !FindInMap [Accounts, Dev, DeployerRoleArn]
                - !FindInMap [Accounts, Qual, DeployerRoleArn]
                - !FindInMap [Accounts, Prod, DeployerRoleArn]
  BuildProdProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-build
      ServiceRole: !FindInMap [Accounts, Shared, PipelineRoleArn]
      EncryptionKey: !GetAtt ArtifactKey.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !Ref ArtifactStore
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubAccessToken
      Filters:
        - JsonPath: $.ref
          MatchEquals: "refs/heads/{Branch}"
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
        EncryptionKey:
          Id: !GetAtt ArtifactKey.Arn
          Type: KMS
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/Pipeline
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              OutputArtifacts:
                - Name: sourceCode
              Configuration:
                Owner: !Ref GithubUsername
                Repo: !Ref GithubRepository
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubAccessToken
                PollForSourceChanges: false
        - Name: BuildAndDeployProd
          Actions:
            - Name: Deploy
              RoleArn: !FindInMap [Accounts, Prod, DeployerRoleArn]
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: sourceCode
              Configuration:
                StackName: sai-librarian
                ActionMode: CREATE_UPDATE
                TemplatePath: sourceCode::infrastructure/cloudformation.template.yml
                TemplateConfiguration: sourceCode::infrastructure/prod.config.json
                RoleArn: !FindInMap [Accounts, Prod, DeployerRoleArn]
                Capabilities: CAPABILITY_IAM
              RunOrder: 1
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: sourceCode
              Configuration:
                ProjectName: !Ref BuildProdProject



